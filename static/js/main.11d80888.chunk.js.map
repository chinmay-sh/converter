{"version":3,"sources":["components/Home/assets/weightConvImg.svg","components/Home/assets/currencyConvImg.svg","components/Home/assets/lengthConvImg.svg","components/NoMatch/assets/404.svg","logo.svg","components/Routes/assets/github.svg","components/Home/Home.js","components/TextField/TextField.js","components/CurrencyConvertor/CurrencyConvertor.js","components/MassConverter/MassConverter.js","components/NoMatch/NoMatch.js","components/LengthConverter/LengthConverter.js","components/Routes/Routes.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","fluid","Row","Col","Card","bg","style","width","borderRadius","margin","Img","variant","src","weightImg","Body","Title","Button","as","NavLink","activeClassName","to","currencyImg","lengthImg","TextField","props","elements","items","entries","index","value","push","Dropdown","Item","eventKey","InputGroup","className","FormControl","placeholder","aria-label","aria","aria-describedby","type","readOnly","onChange","e","target","onSelect","key","event","onUnitChange","Toggle","id","extension","Menu","Currency","useState","inpCurrency","setInpCurrency","convCurrency","inpUnit","setInpUnit","outUnit","setOutUnit","data","apiResponse","setResponse","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","lg","newCurrency","onClick","Mass","inpWeight","setInpWeight","convWeight","setConvWeight","convert","possibilities","React","useEffect","from","newWeight","NoMatch","img404","Length","inpLength","setInpLength","convLength","setConvLength","newLength","prevLength","prevInputUnit","Routes","Navbar","collapseOnSelect","expand","Brand","exact","textDecoration","color","alt","logo","height","aria-controls","Collapse","Nav","Link","NavDropdown","title","href","github","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,qVCO5B,SAASC,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,gEAGR,6BACJ,kBAACD,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,6BACA,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,MAAO,QAAQC,aAAa,OAAOC,OAAO,SAC/D,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKC,IAAWP,MAAO,CAACC,MAAM,MAAME,OAAO,UACnE,kBAACL,EAAA,EAAKU,KAAN,KACI,kBAACV,EAAA,EAAKW,MAAN,uBACA,kBAACC,EAAA,EAAD,CAAQL,QAAQ,OAAOM,GAAIC,IAASC,gBAAgB,SAASC,GAAG,SAAhE,UAKV,kBAACjB,EAAA,EAAD,KACA,6BACE,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,MAAO,QAAQC,aAAa,OAAOC,OAAO,SAC/D,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKS,IAAaf,MAAO,CAACC,MAAM,MAAME,OAAO,UACrE,kBAACL,EAAA,EAAKU,KAAN,KACI,kBAACV,EAAA,EAAKW,MAAN,2BACA,kBAACC,EAAA,EAAD,CAAQL,QAAQ,OAAOM,GAAIC,IAASC,gBAAgB,SAASC,GAAG,aAAhE,UAKV,kBAACjB,EAAA,EAAD,KACA,6BACE,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,MAAO,QAAQC,aAAa,OAAOC,OAAO,SAC/D,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKU,IAAWhB,MAAO,CAACC,MAAM,MAAME,OAAO,UACnE,kBAACL,EAAA,EAAKU,KAAN,KACI,kBAACV,EAAA,EAAKW,MAAN,yBACA,kBAACC,EAAA,EAAD,CAAQL,QAAQ,OAAOM,GAAIC,IAASC,gBAAgB,SAASC,GAAG,WAAhE,WAKZ,8B,kFCHOG,MA3Cf,SAAmBC,GAEf,IAFsB,EAEhBC,EAAWD,EAAMC,SAEjBC,EAAQ,GAJQ,cAMOD,EAASE,WANhB,IAMtB,2BAAiD,CAAC,IAAD,yBAArCC,EAAqC,KAA9BC,EAA8B,KAC7CH,EAAMI,KAAK,kBAACC,EAAA,EAASC,KAAV,CAAeC,SAAUL,GAAQC,KAP1B,8BAUtB,OACE,6BACE,kBAACK,EAAA,EAAD,CAAYC,UAAU,QAClB,kBAACC,EAAA,EAAD,CACAC,YAAab,EAAMa,YACnBC,aAAYd,EAAMe,KAClBC,mBAAiB,eACjBX,MAAOL,EAAMK,MACbY,KAAMjB,EAAMiB,KACZC,SAAUlB,EAAMkB,SAChBC,SAAU,SAAAC,GACNpB,EAAMmB,SAASC,EAAEC,OAAOhB,UAG5B,kBAACE,EAAA,EAAD,CAAUe,SAAU,SAACC,EAAIC,GAEjBxB,EAAMyB,aAAaF,KAEvB,kBAAChB,EAAA,EAASmB,OAAV,CAAiBvC,QAAQ,UAAUwC,GAAG,0BACjC3B,EAAM4B,WAGX,kBAACrB,EAAA,EAASsB,KAAV,KACK3B,O,OCsDN4B,MArFf,WAAqB,IAAD,EACsBC,mBAAS,IAD/B,mBACTC,EADS,KACIC,EADJ,OAEwBF,mBAAS,IAFjC,mBAETG,EAFS,KAIVjC,GAJU,KAIC,CAAC,MAAM,QAJR,EAKa8B,mBAAS9B,EAAS,IAL/B,mBAKTkC,EALS,KAKDC,EALC,OAMaL,mBAAS9B,EAAS,IAN/B,mBAMToC,EANS,KAMDC,EANC,OAOkBP,mBAAS,CAACQ,KAAK,KAPjC,mBAOTC,EAPS,KAOGC,EAPH,iDA0BhB,8BAAAC,EAAA,sEACyBC,MAAM,kCAAmC,CAC9DC,OAAQ,OAAQC,QAAS,CAAE,eAAgB,oBAC3CC,KAAMC,KAAKC,UAAU,CACnB,UAAW,UACZ,UAAW,mDACV,aAAa,KACb,YAAY,MACZ,UAAU,UARhB,cACQC,EADR,gBAWqBA,EAASC,OAX9B,OAWQA,EAXR,OAYET,EAAY,CAACF,KAAMW,IACnBC,QAAQC,IAAIZ,GAbd,4CA1BgB,sBA0ChB,OACE,6BACE,kBAAChE,EAAA,EAAD,CAAWC,MAAM,MACf,6BACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,oDAGJ,6BACA,6BACA,6BACA,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0E,GAAI,EAAG1C,UAAU,WACpB,kBAAC,EAAD,CAAWiB,UAAWO,EAASlB,KAAK,SAASJ,YAAY,iBAAiBZ,SAAUA,EAAUc,KAAK,iBACjGV,MAAO2B,EACPb,SAjDZ,SAAiCmC,GAC/BrB,EAAeqB,IAiDL7B,aA7CZ,SAA6BF,GAC3Ba,EAAWnC,EAASsB,SA+ChB,6BACA,6BACA,kBAAC7C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0E,GAAI,EAAG1C,UAAU,WACpB,kBAAC,EAAD,CAAWO,UAAQ,EAACU,UAAWS,EAASxB,YAAY,qBAAqBZ,SAAUA,EAAUc,KAAK,kBAClGV,MAAO6B,EACPT,aAhDV,SAA6BF,GAC3Be,EAAWrC,EAASsB,SAmDhB,6BACA,kBAAC7C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACa,EAAA,EAAD,CAAQ+D,QA3EF,4CA2EN,gB,0BCfCC,MA7Df,WAAiB,IAAD,EACsBzB,mBAAS,IAD/B,mBACL0B,EADK,KACMC,EADN,OAEwB3B,mBAAS,IAFjC,mBAEL4B,EAFK,KAEOC,EAFP,KAGN3D,EAAW4D,MAAUC,cAAc,QAH7B,EAIiB/B,mBAAS9B,EAAS,IAJnC,mBAILkC,EAJK,KAIGC,EAJH,OAKiBL,mBAAS9B,EAAS,IALnC,mBAKLoC,EALK,KAKGC,EALH,KAyBZ,OAJAyB,IAAMC,WAAU,WACdJ,EAAcC,IAAQJ,GAAWQ,KAAK9B,GAASvC,GAAGyC,MAClD,CAACF,EAAQE,IAGT,6BACE,kBAAC7D,EAAA,EAAD,CAAWC,MAAM,MACf,6BACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,gDAGJ,6BACA,6BACA,6BACA,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0E,GAAI,EAAG1C,UAAU,WACpB,kBAAC,EAAD,CAAWiB,UAAWO,EAASlB,KAAK,SAASJ,YAAY,aAAaZ,SAAUA,EAAUc,KAAK,aAC7FV,MAAOoD,EACPtC,SAjCZ,SAA+B+C,GAC7BR,EAAaQ,GACbN,EAAcC,IAAQK,GAAWD,KAAK9B,GAASvC,GAAGyC,KAgCxCZ,aA7BZ,SAA6BF,GAC3Ba,EAAWnC,EAASsB,SA+BhB,6BACA,6BACA,kBAAC7C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0E,GAAI,EAAG1C,UAAU,WACpB,kBAAC,EAAD,CAAWO,UAAQ,EAACU,UAAWS,EAASxB,YAAY,iBAAiBZ,SAAUA,EAAUc,KAAK,cAC9FV,MAAOsD,EACPlC,aAlCV,SAA6BF,GAC3Be,EAAWrC,EAASsB,Y,kBCqBX4C,MAtCf,WACI,OAEA,yBAAKxD,UAAU,aAEb,yBAAKA,UAAU,SAET,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,YAAYvB,IAAKgF,IAAQrF,MAAM,UAC9C,kBAAC,IAAD,CAASa,GAAG,KAAI,uBAAGe,UAAU,cAAcU,OAAO,UAAlC,kBAGpB,yBAAKV,UAAU,WACX,yBAAKA,UAAU,gBAAgBvB,IAAI,8CAA8CL,MAAM,SACvF,yBAAK4B,UAAU,cACX,yBAAKA,UAAU,eAAevB,IAAI,6CAA6CL,MAAM,UACrF,yBAAK4B,UAAU,cAAcvB,IAAI,4CAA4CL,MAAM,UAEvF,yBAAK4B,UAAU,iBACX,yBAAKA,UAAU,mBAAmBvB,IAAI,iDAAiDL,MAAM,YAGrG,yBAAK4B,UAAU,iBACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,a,4DCkChB0D,MA9Df,WAAmB,IAAD,EACoBtC,mBAAS,IAD7B,mBACPuC,EADO,KACIC,EADJ,OAEsBxC,mBAAS,IAF/B,mBAEPyC,EAFO,KAEKC,EAFL,KAGRxE,EAAW4D,MAAUC,cAAc,UAH3B,EAIe/B,mBAAS9B,EAAS,IAJjC,mBAIPkC,EAJO,KAICC,EAJD,OAKeL,mBAAS9B,EAAS,IALjC,mBAKPoC,EALO,KAKCC,EALD,KA0Bd,OAJA0B,qBAAU,WACRS,EAAcZ,IAAQS,GAAWL,KAAK9B,GAASvC,GAAGyC,MAClD,CAACF,EAAQE,IAGT,6BACE,kBAAC7D,EAAA,EAAD,CAAWC,MAAM,MACf,6BACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kDAGJ,6BACA,6BACA,6BACA,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0E,GAAI,EAAG1C,UAAU,WACpB,kBAAC,EAAD,CAAWiB,UAAWO,EAASlB,KAAK,SAASJ,YAAY,eAAeZ,SAAUA,EAAUc,KAAK,eAC/FV,MAAOiE,EACPnD,SAlCZ,SAA+BuD,GAC7BH,GAAa,SAAAI,GAAU,OAAiBD,KACxCD,EAAcZ,IAAQa,GAAWT,KAAK9B,GAASvC,GAAGyC,KAiCxCZ,aA9BZ,SAA6BF,GAC3Ba,GAAW,SAAAwC,GAAa,OAAoB3E,EAASsB,WAgCjD,6BACA,6BACA,kBAAC7C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0E,GAAI,EAAG1C,UAAU,WACpB,kBAAC,EAAD,CAAWO,UAAQ,EAACU,UAAWS,EAASxB,YAAY,mBAAmBZ,SAAUA,EAAUc,KAAK,gBAChGV,MAAOmE,EACP/C,aAnCV,SAA6BF,GAC3Be,EAAWrC,EAASsB,Y,kBCPX,SAASsD,IACpB,OACE,kBAAC,IAAD,KACE,6BACI,kBAACrG,EAAA,EAAD,CAAWC,OAAK,GAChB,kBAACqG,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKnG,GAAG,OAAOM,QAAQ,QACnD,kBAAC2F,EAAA,EAAOG,MAAR,KACI,kBAAC,IAAD,CAASrF,GAAG,IAAIsF,OAAK,EAACvF,gBAAgB,SAASb,MAAO,CAAEqG,eAAgB,OAAOC,MAAM,UAArF,aACe,IACX,yBACIC,IAAI,GACJjG,IAAKkG,IACLvG,MAAM,KACNwG,OAAO,KACP5E,UAAU,+BAItB,kBAACmE,EAAA,EAAOpD,OAAR,CAAe8D,gBAAc,0BAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiB9D,GAAG,yBAChB,kBAAC+D,EAAA,EAAD,CAAK/E,UAAU,WAEX,kBAAC+E,EAAA,EAAIC,KAAL,CAAU7G,MAAO,CAAEqG,eAAgB,OAAOC,MAAM,SAAW3E,SAAS,IAAId,gBAAgB,SAASF,GAAIC,IAASE,GAAG,KAAjH,QACA,kBAACgG,EAAA,EAAD,CAAaC,MAAM,QAAQlE,GAAG,gBAC5B,kBAACiE,EAAA,EAAYpF,KAAb,CAAkBC,SAAS,MAAMd,gBAAgB,SAASF,GAAIC,IAASE,GAAG,SAA1E,kBACA,kBAACgG,EAAA,EAAYpF,KAAb,CAAkBC,SAAS,MAAMd,gBAAgB,SAASF,GAAIC,IAASE,GAAG,aAA1E,sBACA,kBAACgG,EAAA,EAAYpF,KAAb,CAAkBC,SAAS,MAAMd,gBAAgB,SAASF,GAAIC,IAASE,GAAG,WAA1E,qBAEF,kBAAC8F,EAAA,EAAIC,KAAL,CAAU7G,MAAO,CAAEqG,eAAgB,OAAOC,MAAM,SAAW3E,SAAS,IAAId,gBAAgB,SAASF,GAAIC,IAASE,GAAG,UAAjH,SACA,kBAAC8F,EAAA,EAAIC,KAAL,CAAU7G,MAAO,CAAEqG,eAAgB,OAAOC,MAAM,SAAW3E,SAAS,IAAIqF,KAAK,2CAA2CzE,OAAO,UAC7H,yBAAKjC,IAAK2G,IAAQhH,MAAM,KAAKwG,OAAO,OAAQ,IAD9C,cASd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,OAAK,EAACc,KAAK,KAChB,kBAACzH,EAAD,OAEF,kBAAC,IAAD,CAAOyH,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,OAAOC,UAAW9B,IAC9B,kBAAC,IAAD,CAAUvE,GAAG,Y,OCjEV,SAASsG,IACtB,OACE,yBAAKvF,UAAU,OACb,kBAACkE,EAAD,OCKcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjE,QAAQiE,MAAMA,EAAMC,c","file":"static/js/main.11d80888.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weightConvImg.2df4348f.svg\";","module.exports = __webpack_public_path__ + \"static/media/currencyConvImg.59f032e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/lengthConvImg.f026c68b.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.a79151a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.cc95e53b.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","import React from 'react';\r\nimport {Container,Row, Col,Button,Card} from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport weightImg from './assets/weightConvImg.svg';\r\nimport currencyImg from './assets/currencyConvImg.svg';\r\nimport lengthImg from './assets/lengthConvImg.svg';\r\n\r\nexport default function Home() {\r\n    return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h2>Welcome to Universal Converter</h2>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        <Row>\r\n\r\n          <Col>\r\n            <br />\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\" }}>\r\n                <Card.Img variant=\"top\" src={weightImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Mass Converter</Card.Title>  \r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/mass\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n          <br/>\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\"  }}>\r\n                <Card.Img variant=\"top\" src={currencyImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Currency Converter</Card.Title>\r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/currency\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n          <br/>\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\"  }}>\r\n                <Card.Img variant=\"top\" src={lengthImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Length Converter</Card.Title>\r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/length\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n      </Container>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\nimport {InputGroup,FormControl,Dropdown,DropdownButton} from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction TextField(props) {\r\n\r\n    const elements = props.elements;\r\n\r\n    const items = []\r\n\r\n    for (const [index, value] of elements.entries()) {\r\n        items.push(<Dropdown.Item eventKey={index}>{value}</Dropdown.Item>)\r\n    }\r\n    \r\n    return(\r\n      <div>\r\n        <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n            placeholder={props.placeholder}\r\n            aria-label={props.aria}\r\n            aria-describedby=\"basic-addon2\"\r\n            value={props.value}\r\n            type={props.type}\r\n            readOnly={props.readOnly}\r\n            onChange={e=>{\r\n                props.onChange(e.target.value)\r\n            }}\r\n            />\r\n            <Dropdown onSelect={(key,event)=>{\r\n                    {/*console.log(`${props.placeholder} : ${elements[key]}`)*/}\r\n                    props.onUnitChange(key)\r\n                }}>\r\n                <Dropdown.Toggle variant=\"success\" id=\"input-group-dropdown-2\">\r\n                    {props.extension}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    {items}\r\n                </Dropdown.Menu>\r\n                </Dropdown>\r\n        </InputGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default TextField;","import React,{useState,useEffect} from 'react';\r\nimport './CurrencyConvertor.css';\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport TextField from '../TextField/TextField';\r\nimport { findAllByDisplayValue } from '@testing-library/react';\r\n\r\n\r\nfunction Currency() {\r\n    const [inpCurrency, setInpCurrency] = useState('');\r\n    const [convCurrency, setConvCurrency] = useState('');\r\n\r\n    const elements = ['USD','INR'];\r\n    const [inpUnit,setInpUnit] = useState(elements[0]);\r\n    const [outUnit,setOutUnit] = useState(elements[0]);\r\n    const [apiResponse,setResponse] = useState({data:[]});\r\n    \r\n    function handleInpCurrencyChange(newCurrency){\r\n      setInpCurrency(newCurrency);\r\n    }\r\n\r\n\r\n    function handleInpUnitChange(key){\r\n      setInpUnit(elements[key]);\r\n      // setInpCurrency('');\r\n      // setConvCurrency('');\r\n    }\r\n\r\n    function handleOutUnitChange(key){\r\n      setOutUnit(elements[key]);\r\n      // setInpCurrency('');\r\n      // setConvCurrency('');\r\n    }\r\n\r\n    async function convert(){\r\n      const response = await fetch('https://neutrinoapi.net/convert', {\r\n        method: 'POST', headers: { 'Content-type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'user-id': 'redlord',\r\n    \t    'api-key': 'dWBezecu9Ie8vtSrdIHVzAWoq6CdbhIJ0hdVByjJG5pfFxfu',\r\n          'from-value':'10',\r\n          'from-type':'USD',\r\n          'to-type':'INR'\r\n        })\r\n      });\r\n      const json = await response.json();\r\n      setResponse({data: json});\r\n      console.log(apiResponse)\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <Container fluid=\"sm\">\r\n          <br/>\r\n          <Row>\r\n            <Col>\r\n              <h3>Currency Converter</h3>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField extension={inpUnit} type=\"number\" placeholder=\"Enter Currency\" elements={elements} aria=\"Currency input\" \r\n                value={inpCurrency} \r\n                onChange={handleInpCurrencyChange}\r\n                onUnitChange={handleInpUnitChange}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField readOnly extension={outUnit} placeholder=\"Converted Currency\" elements={elements} aria=\"Currency output\" \r\n              value={convCurrency}\r\n              onUnitChange={handleOutUnitChange}/>\r\n            </Col>\r\n          </Row>\r\n\r\n          <br/>\r\n          <Row>\r\n            <Col>\r\n              <Button onClick={convert}>CONVERT</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Currency;","import React,{useState} from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport TextField from '../TextField/TextField';\r\nimport './MassConverter.css';\r\nimport convert from 'convert-units';\r\n\r\nfunction Mass() {\r\n    const [inpWeight, setInpWeight] = useState('');\r\n    const [convWeight, setConvWeight] = useState('');\r\n    const elements = convert().possibilities('mass');\r\n    const [inpUnit,setInpUnit] = useState(elements[0]);\r\n    const [outUnit,setOutUnit] = useState(elements[0]);\r\n\r\n\r\n    function handleInpWeightChange(newWeight){\r\n      setInpWeight(newWeight);\r\n      setConvWeight(convert(newWeight).from(inpUnit).to(outUnit));\r\n    }\r\n\r\n    function handleInpUnitChange(key){\r\n      setInpUnit(elements[key]);\r\n    }\r\n\r\n    function handleOutUnitChange(key){\r\n      setOutUnit(elements[key]);\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n      setConvWeight(convert(inpWeight).from(inpUnit).to(outUnit));\r\n    },[inpUnit,outUnit]);\r\n\r\n    return(\r\n      <div>\r\n        <Container fluid=\"sm\">\r\n          <br/>\r\n          <Row>\r\n            <Col>\r\n              <h3>Mass Converter</h3>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField extension={inpUnit} type=\"number\" placeholder=\"Enter Mass\" elements={elements} aria=\"Mass input\" \r\n                value={inpWeight} \r\n                onChange={handleInpWeightChange}\r\n                onUnitChange={handleInpUnitChange}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField readOnly extension={outUnit} placeholder=\"Converted Mass\" elements={elements} aria=\"Mass output\" \r\n              value={convWeight}\r\n              onUnitChange={handleOutUnitChange}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Mass;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport img404 from './assets/404.svg';\r\n\r\n\r\n\r\nfunction NoMatch() {\r\n    return(\r\n      \r\n    <div className=\"bg-purple\">\r\n        \r\n      <div className=\"stars\">\r\n          \r\n            <div className=\"central-body\">\r\n                <img className=\"image-404\" src={img404} width=\"300px\"/>\r\n                <NavLink to=\"/\"><a className=\"btn-go-home\" target=\"_blank\">GO BACK HOME</a></NavLink>\r\n            </div>\r\n      \r\n            <div className=\"objects\">\r\n                <img className=\"object_rocket\" src=\"http://salehriaz.com/404Page/img/rocket.svg\" width=\"40px\"/>\r\n                <div className=\"earth-moon\">\r\n                    <img className=\"object_earth\" src=\"http://salehriaz.com/404Page/img/earth.svg\" width=\"100px\"/>\r\n                    <img className=\"object_moon\" src=\"http://salehriaz.com/404Page/img/moon.svg\" width=\"80px\"/>\r\n                </div>\r\n                <div className=\"box_astronaut\">\r\n                    <img className=\"object_astronaut\" src=\"http://salehriaz.com/404Page/img/astronaut.svg\" width=\"140px\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"glowing_stars\">\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n            </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default NoMatch;","import React,{useState, useEffect} from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport TextField from '../TextField/TextField';\r\nimport './LengthConverter.css';\r\nimport convert from 'convert-units';\r\n\r\nfunction Length() {\r\n    const [inpLength, setInpLength] = useState('');\r\n    const [convLength, setConvLength] = useState('');\r\n    const elements = convert().possibilities('length');\r\n    const [inpUnit,setInpUnit] = useState(elements[0]);\r\n    const [outUnit,setOutUnit] = useState(elements[0]);\r\n\r\n\r\n    function handleInpLengthChange(newLength){\r\n      setInpLength(prevLength => prevLength = newLength);\r\n      setConvLength(convert(newLength).from(inpUnit).to(outUnit));\r\n    }\r\n\r\n    function handleInpUnitChange(key){\r\n      setInpUnit(prevInputUnit => prevInputUnit = elements[key]);\r\n    }\r\n\r\n    function handleOutUnitChange(key){\r\n      setOutUnit(elements[key]);\r\n    }\r\n\r\n    // use effect to access the most current state of the state variables that are async in nature\r\n    useEffect(()=>{\r\n      setConvLength(convert(inpLength).from(inpUnit).to(outUnit));\r\n    },[inpUnit,outUnit]);\r\n\r\n    return(\r\n      <div>\r\n        <Container fluid=\"sm\">\r\n          <br/>\r\n          <Row>\r\n            <Col>\r\n              <h3>Length Converter</h3>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField extension={inpUnit} type=\"number\" placeholder=\"Enter Length\" elements={elements} aria=\"Length input\" \r\n                value={inpLength} \r\n                onChange={handleInpLengthChange}\r\n                onUnitChange={handleInpUnitChange}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField readOnly extension={outUnit} placeholder=\"Converted Length\" elements={elements} aria=\"Length output\" \r\n              value={convLength}\r\n              onUnitChange={handleOutUnitChange}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Length;","import React from 'react';\r\nimport Home from '../Home/Home';\r\nimport Currency from '../CurrencyConvertor/CurrencyConvertor';\r\nimport Mass from '../MassConverter/MassConverter';\r\nimport NoMatch from '../NoMatch/NoMatch';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport {Nav,Navbar,Container,NavDropdown} from 'react-bootstrap';\r\nimport logo from '../../logo.svg';\r\nimport Length from '../LengthConverter/LengthConverter';\r\nimport github from './assets/github.svg';\r\n\r\nexport default function Routes(){\r\n    return(\r\n      <Router>\r\n        <div>\r\n            <Container fluid>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    <NavLink to=\"/\" exact activeClassName=\"active\" style={{ textDecoration: 'none',color:\"white\" }}>\r\n                        CloudMark {' '}\r\n                        <img\r\n                            alt=\"\"\r\n                            src={logo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />\r\n                    </NavLink>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n                    <Nav className=\"ml-auto\" >\r\n                        {/* eventKey is required for collapse on select to work */}\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"1\" activeClassName=\"active\" as={NavLink} to=\"/\">Home</Nav.Link>\r\n                        <NavDropdown title=\"Tools\" id=\"nav-dropdown\">\r\n                          <NavDropdown.Item eventKey=\"2.1\" activeClassName=\"active\" as={NavLink} to=\"/mass\">Mass Converter</NavDropdown.Item>\r\n                          <NavDropdown.Item eventKey=\"2.2\" activeClassName=\"active\" as={NavLink} to=\"/currency\">Currency Convertor</NavDropdown.Item>\r\n                          <NavDropdown.Item eventKey=\"2.3\" activeClassName=\"active\" as={NavLink} to=\"/length\">Length Convertor</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"3\" activeClassName=\"active\" as={NavLink} to=\"/about\">About</Nav.Link>\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"4\" href=\"https://github.com/the-redlord/converter\" target=\"_blank\">\r\n                          <img src={github} width=\"20\" height=\"20\" />{' '}GitHub</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            </Container>\r\n  \r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/mass\">\r\n              <Mass/>\r\n            </Route>\r\n            <Route path=\"/currency\">\r\n              <Currency />\r\n            </Route>\r\n            <Route path=\"/length\">\r\n              <Length />\r\n            </Route>\r\n            <Route path=\"/404\" component={NoMatch}/>\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }","import React from \"react\";\nimport Routes from '../Routes/Routes';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}