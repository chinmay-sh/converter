{"version":3,"sources":["components/Home/assets/weightConvImg.svg","components/Home/assets/currencyConvImg.svg","logo.svg","components/Home/Home.js","components/CurrencyConvertor/CurrencyConvertor.js","components/WeightConverter/WeightConverter.js","components/NoMatch/NoMatch.js","components/Routes/Routes.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","fluid","Row","Col","Card","bg","style","width","borderRadius","margin","Img","variant","src","weightImg","Body","Title","Button","as","NavLink","activeClassName","to","currencyImg","Currency","Weight","NoMatch","Routes","Navbar","collapseOnSelect","expand","Brand","exact","textDecoration","color","alt","logo","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,oPCM5B,SAASC,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,iEAGR,6BACJ,kBAACD,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,6BACA,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,MAAO,QAAQC,aAAa,OAAOC,OAAO,SAC/D,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKC,IAAWP,MAAO,CAACC,MAAM,MAAME,OAAO,UACnE,kBAACL,EAAA,EAAKU,KAAN,KACI,kBAACV,EAAA,EAAKW,MAAN,yBAEA,kBAACC,EAAA,EAAD,CAAQL,QAAQ,OAAOM,GAAIC,IAASC,gBAAgB,SAASC,GAAG,WAAhE,UAKV,kBAACjB,EAAA,EAAD,KACA,6BACE,kBAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,MAAO,QAAQC,aAAa,OAAOC,OAAO,SAC/D,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKS,IAAaf,MAAO,CAACC,MAAM,MAAME,OAAO,UACrE,kBAACL,EAAA,EAAKU,KAAN,KACI,kBAACV,EAAA,EAAKW,MAAN,2BAEA,kBAACC,EAAA,EAAD,CAAQL,QAAQ,OAAOM,GAAIC,IAASC,gBAAgB,SAASC,GAAG,aAAhE,WAKZ,8BCpBOE,MAhBf,WACI,OACE,6BACE,kBAACtB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eCWGoB,MAhBf,WACI,OACE,6BACE,kBAACvB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eCWGqB,MAhBf,WACI,OACE,6BACE,kBAACxB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,sB,yCCIG,SAASsB,IACpB,OACE,kBAAC,IAAD,KACE,6BACI,kBAACzB,EAAA,EAAD,CAAWC,OAAK,GAChB,kBAACyB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKvB,GAAG,OAAOM,QAAQ,QACnD,kBAACe,EAAA,EAAOG,MAAR,KACI,kBAAC,IAAD,CAAST,GAAG,IAAIU,OAAK,EAACX,gBAAgB,SAASb,MAAO,CAAEyB,eAAgB,OAAOC,MAAM,UAArF,aACe,IACX,yBACIC,IAAI,GACJrB,IAAKsB,IACL3B,MAAM,KACN4B,OAAO,KACPC,UAAU,+BAItB,kBAACV,EAAA,EAAOW,OAAR,CAAeC,gBAAc,0BAC7B,kBAACZ,EAAA,EAAOa,SAAR,CAAiBC,GAAG,yBAChB,kBAACC,EAAA,EAAD,CAAKL,UAAU,WAEX,kBAACK,EAAA,EAAIC,KAAL,CAAUpC,MAAO,CAAEyB,eAAgB,OAAOC,MAAM,SAAWW,SAAS,IAAIxB,gBAAgB,SAASF,GAAIC,IAASE,GAAG,KAAjH,QACA,kBAACqB,EAAA,EAAIC,KAAL,CAAUpC,MAAO,CAAEyB,eAAgB,OAAOC,MAAM,SAAWW,SAAS,IAAIxB,gBAAgB,SAASF,GAAIC,IAASE,GAAG,WAAjH,oBACA,kBAACqB,EAAA,EAAIC,KAAL,CAAUpC,MAAO,CAAEyB,eAAgB,OAAOC,MAAM,SAAWW,SAAS,IAAIxB,gBAAgB,SAASF,GAAIC,IAASE,GAAG,aAAjH,0BAQd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACc,KAAK,KAChB,kBAAC7C,EAAD,OAEF,kBAAC,IAAD,CAAO6C,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,UAAWrB,O,MCpDf,SAASsB,IACtB,OACE,yBAAKV,UAAU,OACb,kBAACX,EAAD,OCKcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ddfbea35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weightConvImg.2df4348f.svg\";","module.exports = __webpack_public_path__ + \"static/media/currencyConvImg.59f032e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2581baf1.svg\";","import React from 'react';\r\nimport {Container,Row, Col,Button,Card} from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport weightImg from './assets/weightConvImg.svg';\r\nimport currencyImg from './assets/currencyConvImg.svg';\r\n\r\nexport default function Home() {\r\n    return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h2>Welcome to Universal Calculator</h2>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        <Row>\r\n\r\n          <Col>\r\n            <br />\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\" }}>\r\n                <Card.Img variant=\"top\" src={weightImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Weight Converter</Card.Title>\r\n                    \r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/weight\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n          <br/>\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\"  }}>\r\n                <Card.Img variant=\"top\" src={currencyImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Currency Converter</Card.Title>\r\n                    \r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/currency\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n      </Container>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction Currency() {\r\n    return(\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              Hi\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Currency;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction Weight() {\r\n    return(\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              Hi\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Weight;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction NoMatch() {\r\n    return(\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              Not Found\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport Home from '../Home/Home';\r\nimport Currency from '../CurrencyConvertor/CurrencyConvertor';\r\nimport Weight from '../WeightConverter/WeightConverter';\r\nimport NoMatch from '../NoMatch/NoMatch';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport {Nav,Navbar,Container} from 'react-bootstrap';\r\nimport logo from '../../logo.svg';\r\n\r\nexport default function Routes(){\r\n    return(\r\n      <Router>\r\n        <div>\r\n            <Container fluid>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    <NavLink to=\"/\" exact activeClassName=\"active\" style={{ textDecoration: 'none',color:\"white\" }}>\r\n                        CloudMark {' '}\r\n                        <img\r\n                            alt=\"\"\r\n                            src={logo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />\r\n                    </NavLink>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n                    <Nav className=\"ml-auto\" >\r\n                        {/* eventKey is required for collapse on select to work */}\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"1\" activeClassName=\"active\" as={NavLink} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"2\" activeClassName=\"active\" as={NavLink} to=\"/weight\">Weight Converter</Nav.Link>\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"3\" activeClassName=\"active\" as={NavLink} to=\"/currency\">Currency Convertor</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            </Container>\r\n  \r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/weight\">\r\n              <Weight/>\r\n            </Route>\r\n            <Route path=\"/currency\">\r\n              <Currency />\r\n            </Route>\r\n            <Route component={NoMatch}/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }","import React from \"react\";\nimport Routes from '../Routes/Routes';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}