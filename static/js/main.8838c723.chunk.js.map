{"version":3,"sources":["components/Home/Home.js","components/TextField/TextField.js","components/CurrencyConvertor/CurrencyConvertor.js","components/MassConverter/MassConverter.js","components/NoMatch/NoMatch.js","components/Routes/Routes.js","components/App/App.js","serviceWorker.js","index.js","components/Home/assets/weightConvImg.svg","components/Home/assets/currencyConvImg.svg","components/NoMatch/assets/404.svg","logo.svg"],"names":["Home","Container","fluid","Row","Col","Card","bg","style","width","borderRadius","margin","Img","variant","src","weightImg","Body","Title","Button","as","NavLink","activeClassName","to","currencyImg","TextField","props","elements","items","entries","index","value","push","Dropdown","Item","eventKey","InputGroup","className","FormControl","placeholder","aria-label","aria","aria-describedby","type","readOnly","onChange","e","target","DropdownButton","Append","title","id","Currency","useState","inpWeight","setWeight","convWeight","lg","extension","newWeight","Mass","setConvWeight","convert","possibilities","from","NoMatch","img404","Routes","Navbar","collapseOnSelect","expand","Brand","exact","textDecoration","color","alt","logo","height","Toggle","aria-controls","Collapse","Nav","Link","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.8838c723.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Container,Row, Col,Button,Card} from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport weightImg from './assets/weightConvImg.svg';\r\nimport currencyImg from './assets/currencyConvImg.svg';\r\n\r\nexport default function Home() {\r\n    return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h2>Welcome to Universal Converter</h2>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        <Row>\r\n\r\n          <Col>\r\n            <br />\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\" }}>\r\n                <Card.Img variant=\"top\" src={weightImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Mass Converter</Card.Title>  \r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/mass\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n          <br/>\r\n            <Card bg=\"dark\" style={{ width: '18rem',borderRadius:\"20px\",margin:\"auto\"  }}>\r\n                <Card.Img variant=\"top\" src={currencyImg} style={{width:\"70%\",margin:\"auto\"}} />\r\n                <Card.Body>\r\n                    <Card.Title>Currency Converter</Card.Title>\r\n                    <Button variant=\"info\" as={NavLink} activeClassName=\"active\" to=\"/currency\">RUN</Button>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n      </Container>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\nimport {InputGroup,FormControl,Dropdown,DropdownButton} from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction TextField(props) {\r\n\r\n    const elements = props.elements;\r\n\r\n    const items = []\r\n\r\n    for (const [index, value] of elements.entries()) {\r\n        items.push(<Dropdown.Item eventKey={index}>{value}</Dropdown.Item>)\r\n    }\r\n    \r\n    return(\r\n      <div>\r\n        <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n            placeholder={props.placeholder}\r\n            aria-label={props.aria}\r\n            aria-describedby=\"basic-addon2\"\r\n            value={props.value}\r\n            type=\"number\"\r\n            readOnly={props.readOnly}\r\n            onChange={e=>{\r\n                props.onChange(e.target.value)\r\n            }}\r\n            />\r\n            <DropdownButton\r\n                as={InputGroup.Append}\r\n                variant=\"primary\"\r\n                title=\"Dropdown\"\r\n                id=\"input-group-dropdown-2\"\r\n                >\r\n                {items}\r\n            </DropdownButton>\r\n        </InputGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default TextField;","import React,{useState} from 'react';\r\nimport './CurrencyConvertor.css';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport TextField from '../TextField/TextField';\r\n\r\n\r\nfunction Currency() {\r\n  const [inpWeight, setWeight] = useState('');\r\n    const [convWeight, setConvWeight] = useState('');\r\n\r\n\r\n    function handleInpWeightChange(newWeight){\r\n      setWeight(newWeight);\r\n    }\r\n    return(\r\n      <div>\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            <Col>\r\n              <h3>Currency Converter</h3>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField extension=\"kg\" placeholder=\"Enter Weight\" aria=\"Weight input\" value={inpWeight} onChange={handleInpWeightChange}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n          <Col lg={8} className=\"textCol\">\r\n              <TextField readOnly extension=\"kg\" placeholder=\"Converted Weight\" aria=\"Weight input\" value={convWeight}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Currency;","import React,{useState} from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport TextField from '../TextField/TextField';\r\nimport './MassConverter.css';\r\nimport convert from 'convert-units';\r\n\r\nfunction Mass() {\r\n    const [inpWeight, setWeight] = useState('');\r\n    const [convWeight, setConvWeight] = useState('');\r\n\r\n\r\n    function handleInpWeightChange(newWeight){\r\n      setWeight(newWeight);\r\n      setConvWeight(convert(newWeight).from('kg').to('t'));\r\n    }\r\n\r\n    const elements = convert().possibilities('mass');\r\n\r\n    return(\r\n      <div>\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            <Col>\r\n              <h3>Mass Converter</h3>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField extension=\"kg\" placeholder=\"Enter Mass\" elements={elements} aria=\"Mass input\" value={inpWeight} onChange={handleInpWeightChange}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col lg={8} className=\"textCol\">\r\n              <TextField readOnly extension=\"kg\" placeholder=\"Converted Mass\" elements={elements} aria=\"Mass input\" value={convWeight}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Mass;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport img404 from './assets/404.svg';\r\n\r\n\r\n\r\nfunction NoMatch() {\r\n    return(\r\n      \r\n    <div className=\"bg-purple\">\r\n        \r\n      <div className=\"stars\">\r\n          \r\n            <div className=\"central-body\">\r\n                <img className=\"image-404\" src={img404} width=\"300px\"/>\r\n                <NavLink to=\"/\"><a className=\"btn-go-home\" target=\"_blank\">GO BACK HOME</a></NavLink>\r\n            </div>\r\n      \r\n            <div className=\"objects\">\r\n                <img className=\"object_rocket\" src=\"http://salehriaz.com/404Page/img/rocket.svg\" width=\"40px\"/>\r\n                <div className=\"earth-moon\">\r\n                    <img className=\"object_earth\" src=\"http://salehriaz.com/404Page/img/earth.svg\" width=\"100px\"/>\r\n                    <img className=\"object_moon\" src=\"http://salehriaz.com/404Page/img/moon.svg\" width=\"80px\"/>\r\n                </div>\r\n                <div className=\"box_astronaut\">\r\n                    <img className=\"object_astronaut\" src=\"http://salehriaz.com/404Page/img/astronaut.svg\" width=\"140px\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"glowing_stars\">\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n                <div className=\"star\"></div>\r\n            </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport Home from '../Home/Home';\r\nimport Currency from '../CurrencyConvertor/CurrencyConvertor';\r\nimport Mass from '../MassConverter/MassConverter';\r\nimport NoMatch from '../NoMatch/NoMatch';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport {Nav,Navbar,Container} from 'react-bootstrap';\r\nimport logo from '../../logo.svg';\r\n\r\nexport default function Routes(){\r\n    return(\r\n      <Router>\r\n        <div>\r\n            <Container fluid>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    <NavLink to=\"/\" exact activeClassName=\"active\" style={{ textDecoration: 'none',color:\"white\" }}>\r\n                        CloudMark {' '}\r\n                        <img\r\n                            alt=\"\"\r\n                            src={logo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />\r\n                    </NavLink>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n                    <Nav className=\"ml-auto\" >\r\n                        {/* eventKey is required for collapse on select to work */}\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"1\" activeClassName=\"active\" as={NavLink} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"2\" activeClassName=\"active\" as={NavLink} to=\"/mass\">Mass Converter</Nav.Link>\r\n                        <Nav.Link style={{ textDecoration: 'none',color:\"white\" }} eventKey=\"3\" activeClassName=\"active\" as={NavLink} to=\"/currency\">Currency Convertor</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            </Container>\r\n  \r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/mass\">\r\n              <Mass/>\r\n            </Route>\r\n            <Route path=\"/currency\">\r\n              <Currency />\r\n            </Route>\r\n            <Route path=\"/404\" component={NoMatch}/>\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }","import React from \"react\";\nimport Routes from '../Routes/Routes';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/weightConvImg.2df4348f.svg\";","module.exports = __webpack_public_path__ + \"static/media/currencyConvImg.59f032e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.a79151a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.cc95e53b.svg\";"],"sourceRoot":""}